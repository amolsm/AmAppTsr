@model Tsr.Core.Models.AdmissionMedicalScheduleVM

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Add New Medical Category</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MedicalCode, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MedicalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MedicalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.CourseId,
                        (IEnumerable<SelectListItem>)ViewBag.Course, " ", new { @class = "form-control", @onchange = "FillBatch()" })
                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BatchId, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">

                    @Html.DropDownList("BatchId",
                                         (IEnumerable<SelectListItem>)ViewBag.Batches, "Select Batch", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BatchId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MedicalDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">

                   
                    @Html.EditorFor(model => model.MedicalDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                    @Html.ValidationMessageFor(model => model.MedicalDate, "", new { @class = "text-danger" })


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MedicalFees, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MedicalFees, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MedicalFees, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Save" />
    </div>
}
<script>
    function FillBatch() {
        var CourseId = $('#CourseId').val();
        $.ajax({
            url: '/Admission/FillBatch',
            type: "GET",
            dataType: "JSON",
            data: { CourseId: CourseId },
            success: function (Batches) {
                $("#BatchId").html(""); // clear before appending new list
                $("#BatchId").append(
                        $('<option></option>').val("").html(""));
                $.each(Batches, function (i, c) {
                    $("#BatchId").append(
                        $('<option></option>').val(c.BatchId).html(c.BatchCode));
                });
            }
        });
    }
</script>
<script src="~/Scripts/js/plugins/bootstrap/bootstrap-select.js"></script>
<script src="~/Scripts/ModalForm.js"></script>



