@model Tsr.Core.Models.BatchEditVM

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Edit Batch</h4>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.BatchId)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CourseId)
    @Html.HiddenFor(model => model.CategoryId)
    <div class="modal-body">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.BatchCode, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BatchCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BatchCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                   @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                   @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control", @readonly="true"} })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", @type = "Date" })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", @type = "Date" })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CoordinatorId, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.CoordinatorId,
                        (IEnumerable<SelectListItem>)ViewBag.Coordinator, " ", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CoordinatorId, "", new { @class = "text-danger" })
                </div>
            </div>

           

            <div class="form-group">
                @Html.LabelFor(model => model.ReserveSeats, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ReserveSeats, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReserveSeats, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OnlineBookingStatus, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OnlineBookingStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OnlineBookingStatus, "", new { @class = "text-danger" })
                </div>
            </div>




        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Save" />
    </div>
}

<script>
  function FillCourse() {
      var CategoryId = $('#CategoryId').val();
      //debugger;
    $.ajax({
        url: '/MasterDetails/FillCourse',
        type: "GET",
        dataType: "JSON",
        data: { CategoryId: CategoryId },
        success: function (Courses) {
            $("#CourseId").html(""); // clear before appending new list
            $("#CourseId").append(
                   $('<option></option>').val(0).html("Select Course"));
            $.each(Courses, function (i, c) {
                $("#CourseId").append(
                    $('<option></option>').val(c.CourseId).html(c.CourseName));
            });
        }
    });
  }
</script>
<script type="text/javascript">
    $(function () { // will trigger when the document is ready
       $('.datepicker').datepicker(); //Initialise any date pickers
    });
</script> 
